#load in libraries
#install.packages("tidyverse")
library(tidyverse)
library(haven)
library(readr)
library(dplyr)
#install.packages("writexl")
library(writexl)
#install.packages("here")
library(here)
#reading in baseline CSV
Baseline = read.csv("~/GitHub/COGS164_NY_Resolution/COGS 164 Initial Survey (Responses) - Form Responses 1.csv")
#updating column names
Baseline = Baseline %>%
rename("email" = Email.Address,
consent = Do.you.consent.to.answering.questions.honestly..consistently..and.completing.surveys.in.a.timely.manner.as.they.are.sent.out.to.you..Additionally..do.you.consent.to.being.contacted.for.follow.ups.if.you.stop.responding..,
FirstResolution = What.is.your.most.important.New.Years.Resolution.for.2025..If.you.do.not.have.one..what.is.your.resolution.for.the.Winter.Quarter.,
PriorExperience = Have.you.ever.attempted.this.resolution.before.,
OtherResolutions = If.you.have.multiple.New.Years..Winter.Quarter.Resolutions..please.list.them.out.below..Do.not.include.the.resolution.discussed.in.the.previous.questions..,
ResolutionCategory = Which.category.best.reflects.your.most.important.New.Years.Resolution..Select..Other..if.none.apply.,
TimeSpent = Since.the.start.of.2025..how.long.have.you.kept.up.with.this.resolution.,
InitialMotivation = What.motivated.you.to.adopt.this.New.Years.resolution..Please.be.as.specific.as.possible.in.regards.to.your.goal..motivation..what.inspired.you.to.start.etc..,
SRFactors = In.addition.to.your.response..what.factors.may.have.motivated.you.to.have.this.resolution..Please.select.all.that.apply.,
Plans = Are.there.any.specific.plans.you.have.in.place.to.meet.your.resolution...E.g..working.out.3x.a.week..waking.up.at.6.am.every.day..If.so..please.explain.your.plan..,
Hours = Ideally..about.how.many.hours.a.week.do.you.want.to.dedicate.to.achieving.your.resolution.,
Excitement = At.this.moment..how.excited.are.you.in.regards.to.taking.steps.to.achieve.your.new.years.resolution.,
Dedication = At.this.time..how.dedicated.are.you.towards.continuing.to.achieve.your.new.years.resolution.,
Grade = What.year.are.you.at.UCSD.,
Religion = Religious.Affiliation,
Relationship = Relationship.Status) %>%
select(-c(Timestamp))
#reading in Follow-up CSVs
Followups = read.csv("~/GitHub/COGS164_NY_Resolution/COGS 164 Follow Up (Responses) - Form Responses 1.csv")
#reading in Follow-up CSVs
Followups = read.csv("~/GitHub/COGS164_NY_Resolution/COGS 164 Follow Up (Responses) - Form Responses 1.csv")
#updating dataset
Followups = Followups %>%
mutate(Timestamp = case_when(
grepl("2/16/2025", Timestamp) ~ "Week 1",
grepl("2/17/2025", Timestamp) ~ "Week 1",
grepl("2/18/2025", Timestamp) ~ "Week 1",
grepl("2/19/2025", Timestamp) ~ "Week 1",
grepl("2/20/2025", Timestamp) ~ "Week 1",
grepl("2/22/2025", Timestamp) ~ "Week 1",
grepl("2/24/2025", Timestamp) ~ "Week 2",
grepl("2/25/2025", Timestamp) ~ "Week 2",
grepl("2/16/2025", Timestamp) ~ "Week 2",
TRUE ~ Timestamp)) %>%
rename(email = Email.Address,
Consistency = Since.the.last.survey.you.filled.out..how.consistent.would.you.say.you.have.been.with.working.towards.achieving.your.new.years.resolution..,
Motivated = Since.the.last.survey.you.filled.out..how.motivated.would.you.say.you.have.been.towards.achieving.your.new.years.resolution..,
Excited = How.excited.have.you.been.feeling..in.regards.to.taking.steps.to.achieve.your.new.years.resolution..since.you.last.took.one.of.our.surveys.,
Effort = How.much.effort.did.you.put.into.achieving.this.resolution.since.you.last.took.one.of.our.surveys.,
Satisfaction = How.satisfied.are.you.with.the.effort.you.put.into.achieving.your.resolution.since.you.last.filled.out.this.survey.,
Dedicated = At.this.time..how.dedicated.are.you.towards.continuing.to.achieve.your.new.years.resolution.,
Hours = How.many.hours.have.you.committed.to.your.resolution.this.week.,
ResolutionStatus = Thinking.about.your.New.Year.s.resolutions..so.far.have.you,
MotivationFactors = Since.you.last.filled.out.this.survey..what.factors.have.been.motivating.you.to.stay.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ObstacleFactors = Since.you.last.filled.out.this.survey..what.factors.have.acted.as.obstacles..preventing.you.from.staying.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ResolutionLapses = How.many.times.have.you.not.made.progress.towards.your.resolution.since.you.last.filled.out.this.survey...Quantify.it.the.best.you.can..ex..missed.a.gym.session.twice..went.on.social.media.7.times..etc..,
InconsistentEmotions = If.you.have.been.inconsistent.with.your.New.Years.resolution..how.did.you.feel.during.those.periods.of.inconsistency....Check.all.that.apply.,
ConsistentEmotions = If.you.have.been.consistent.with.your.New.Years.resolution..how.did.you.feel.during.periods.of.consistency...Check.all.that.apply.
)
View(Followups)
#updating dataset
Followups = Followups %>%
mutate(Timestamp = case_when(
grepl("2/16/2025", Timestamp) ~ "Week 1",
grepl("2/17/2025", Timestamp) ~ "Week 1",
grepl("2/18/2025", Timestamp) ~ "Week 1",
grepl("2/19/2025", Timestamp) ~ "Week 1",
grepl("2/20/2025", Timestamp) ~ "Week 1",
grepl("2/22/2025", Timestamp) ~ "Week 1",
grepl("2/24/2025", Timestamp) ~ "Week 2",
grepl("2/25/2025", Timestamp) ~ "Week 2",
grepl("2/26/2025", Timestamp) ~ "Week 2",
grepl("2/27/2025", Timestamp) ~ "Week 2",
grepl("2/28/2025", Timestamp) ~ "Week 2",
grepl("3/1/2025", Timestamp) ~ "Week 2"
TRUE ~ Timestamp)) %>%
#updating dataset
Followups = Followups %>%
mutate(Timestamp = case_when(
grepl("2/16/2025", Timestamp) ~ "Week 1",
grepl("2/17/2025", Timestamp) ~ "Week 1",
grepl("2/18/2025", Timestamp) ~ "Week 1",
grepl("2/19/2025", Timestamp) ~ "Week 1",
grepl("2/20/2025", Timestamp) ~ "Week 1",
grepl("2/22/2025", Timestamp) ~ "Week 1",
grepl("2/24/2025", Timestamp) ~ "Week 2",
grepl("2/25/2025", Timestamp) ~ "Week 2",
grepl("2/26/2025", Timestamp) ~ "Week 2",
grepl("2/27/2025", Timestamp) ~ "Week 2",
grepl("2/28/2025", Timestamp) ~ "Week 2",
grepl("3/1/2025", Timestamp) ~ "Week 2",
TRUE ~ Timestamp)) %>%
rename(email = Email.Address,
Consistency = Since.the.last.survey.you.filled.out..how.consistent.would.you.say.you.have.been.with.working.towards.achieving.your.new.years.resolution..,
Motivated = Since.the.last.survey.you.filled.out..how.motivated.would.you.say.you.have.been.towards.achieving.your.new.years.resolution..,
Excited = How.excited.have.you.been.feeling..in.regards.to.taking.steps.to.achieve.your.new.years.resolution..since.you.last.took.one.of.our.surveys.,
Effort = How.much.effort.did.you.put.into.achieving.this.resolution.since.you.last.took.one.of.our.surveys.,
Satisfaction = How.satisfied.are.you.with.the.effort.you.put.into.achieving.your.resolution.since.you.last.filled.out.this.survey.,
Dedicated = At.this.time..how.dedicated.are.you.towards.continuing.to.achieve.your.new.years.resolution.,
Hours = How.many.hours.have.you.committed.to.your.resolution.this.week.,
ResolutionStatus = Thinking.about.your.New.Year.s.resolutions..so.far.have.you,
MotivationFactors = Since.you.last.filled.out.this.survey..what.factors.have.been.motivating.you.to.stay.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ObstacleFactors = Since.you.last.filled.out.this.survey..what.factors.have.acted.as.obstacles..preventing.you.from.staying.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ResolutionLapses = How.many.times.have.you.not.made.progress.towards.your.resolution.since.you.last.filled.out.this.survey...Quantify.it.the.best.you.can..ex..missed.a.gym.session.twice..went.on.social.media.7.times..etc..,
InconsistentEmotions = If.you.have.been.inconsistent.with.your.New.Years.resolution..how.did.you.feel.during.those.periods.of.inconsistency....Check.all.that.apply.,
ConsistentEmotions = If.you.have.been.consistent.with.your.New.Years.resolution..how.did.you.feel.during.periods.of.consistency...Check.all.that.apply.
)
#reading in Follow-up CSVs
Followups = read.csv("~/GitHub/COGS164_NY_Resolution/COGS 164 Follow Up (Responses) - Form Responses 1.csv")
#updating dataset
Followups = Followups %>%
mutate(Timestamp = case_when(
grepl("2/16/2025", Timestamp) ~ "Week 1",
grepl("2/17/2025", Timestamp) ~ "Week 1",
grepl("2/18/2025", Timestamp) ~ "Week 1",
grepl("2/19/2025", Timestamp) ~ "Week 1",
grepl("2/20/2025", Timestamp) ~ "Week 1",
grepl("2/22/2025", Timestamp) ~ "Week 1",
grepl("2/24/2025", Timestamp) ~ "Week 2",
grepl("2/25/2025", Timestamp) ~ "Week 2",
grepl("2/26/2025", Timestamp) ~ "Week 2",
grepl("2/27/2025", Timestamp) ~ "Week 2",
grepl("2/28/2025", Timestamp) ~ "Week 2",
grepl("3/1/2025", Timestamp) ~ "Week 2",
TRUE ~ Timestamp)) %>%
rename(email = Email.Address,
Consistency = Since.the.last.survey.you.filled.out..how.consistent.would.you.say.you.have.been.with.working.towards.achieving.your.new.years.resolution..,
Motivated = Since.the.last.survey.you.filled.out..how.motivated.would.you.say.you.have.been.towards.achieving.your.new.years.resolution..,
Excited = How.excited.have.you.been.feeling..in.regards.to.taking.steps.to.achieve.your.new.years.resolution..since.you.last.took.one.of.our.surveys.,
Effort = How.much.effort.did.you.put.into.achieving.this.resolution.since.you.last.took.one.of.our.surveys.,
Satisfaction = How.satisfied.are.you.with.the.effort.you.put.into.achieving.your.resolution.since.you.last.filled.out.this.survey.,
Dedicated = At.this.time..how.dedicated.are.you.towards.continuing.to.achieve.your.new.years.resolution.,
Hours = How.many.hours.have.you.committed.to.your.resolution.this.week.,
ResolutionStatus = Thinking.about.your.New.Year.s.resolutions..so.far.have.you,
MotivationFactors = Since.you.last.filled.out.this.survey..what.factors.have.been.motivating.you.to.stay.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ObstacleFactors = Since.you.last.filled.out.this.survey..what.factors.have.acted.as.obstacles..preventing.you.from.staying.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ResolutionLapses = How.many.times.have.you.not.made.progress.towards.your.resolution.since.you.last.filled.out.this.survey...Quantify.it.the.best.you.can..ex..missed.a.gym.session.twice..went.on.social.media.7.times..etc..,
InconsistentEmotions = If.you.have.been.inconsistent.with.your.New.Years.resolution..how.did.you.feel.during.those.periods.of.inconsistency....Check.all.that.apply.,
ConsistentEmotions = If.you.have.been.consistent.with.your.New.Years.resolution..how.did.you.feel.during.periods.of.consistency...Check.all.that.apply.
)
View(Followups)
View(Followups)
Followups %>%
ggplot(aes(y = Motivated, x = MotivationFactors)) +
geom_bar()
Followups %>%
ggplot(aes(y = Motivated, x = MotivationFactors)) +
geom_point()
consistency_data <- data.frame(
Participant = paste("P", 1:5, sep = ""),
Week1 = c(2, 3, 4, 5, 2)
)
# Convert to long format
consistency_long <- tidyr::pivot_longer(consistency_data, cols = -Participant)
# Create heatmap
ggplot(consistency_long, aes(x = name, y = Participant, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Consistency Heatmap", x = "Week", y = "Participant")
View(consistency_data)
View(consistency_long)
consistency_data
# Convert to long format
consistency_long <- tidyr::pivot_longer(consistency_data, cols = -Participant)
consistency_long
# Create heatmap
ggplot(Followups, aes(x = Timestamp, y = email, fill = Motivated)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(title = "Consistency Heatmap", x = "Week", y = "Participant")
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = Participant, group = Participant, color = Motivated)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = email, group = email, color = Motivated)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = email, group = email)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = Motivated, group = email, color = email)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
scale_color_gradient(low = "blue", high = "red") +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = Motivated, group = email, color = email)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = Motivated, group = email, color = email)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
geom_jitter() +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = Motivated, group = email, color = email)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
geom_jitter(width = 0.2) +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
# Create line graph
ggplot(Followups, aes(x = Timestamp, y = Motivated, group = email, color = email,
alpha = 0.2)) +
geom_line(size = 1) +          # Connect participants across weeks
geom_point(size = 3) +         # Represent each participant as a dot
geom_jitter(width = 0.2) +
labs(title = "Participant Consistency Over Time", x = "Week", y = "Participant") +
theme_minimal()
ggplot(Followups, aes(x = Emotion, y = Count, fill = Status)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
View(Followups)
ggplot(Followups, aes(x = InconsistentEmotions, y = Count, fill = Status)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
ggplot(Followups, aes(x = InconsistentEmotions, y = count(InconsistentEmotions), fill = Status)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
Followups %>%
mutate(Count = count(InconsistentEmotions, Status)) %>%
ggplot(Followups, aes(x = InconsistentEmotions, y = Count, fill = Status)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
Followups %>%
count(InconsistentEmotions, Status)
View(Followups)
Followups %>%
count(InconsistentEmotions)
Followups %>%
mutate(Count = count(InconsistentEmotions)) %>%
ggplot(Followups, aes(x = InconsistentEmotions, y = Count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
Followups %>%
mutate(Count = count(InconsistentEmotions))
Followups %>%
count(InconsistentEmotions)
Followups %>%
mutate(what = count(InconsistentEmotions))
Followups %>%
group_by(InconsistentEmotions) %>%
mutate(Emotion_Count = n())
Followups %>%
group_by(InconsistentEmotions) %>%
mutate(Emotion_Count = n()) %>%
ggplot(Followups, aes(x = InconsistentEmotions, y = Emotion_Count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
Followups %>%
group_by(InconsistentEmotions) %>%
mutate(Emotion_Count = n()) %>%
ggplot(aes(x = InconsistentEmotions, y = Emotion_Count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency")
library(dplyr)
#load in libraries
#install.packages("tidyverse")
library(tidyverse)
library(haven)
library(readr)
library(dplyr)
#install.packages("writexl")
library(writexl)
#install.packages("here")
library(here)
#load in libraries
#install.packages("tidyverse")
library(tidyverse)
library(haven)
library(readr)
library(dplyr)
#install.packages("writexl")
library(writexl)
#install.packages("here")
library(here)
#reading in baseline CSV
Baseline = read.csv("~/GitHub/COGS164_NY_Resolution/COGS 164 Initial Survey (Responses) - Form Responses 1.csv")
#updating column names
Baseline = Baseline %>%
rename("email" = Email.Address,
consent = Do.you.consent.to.answering.questions.honestly..consistently..and.completing.surveys.in.a.timely.manner.as.they.are.sent.out.to.you..Additionally..do.you.consent.to.being.contacted.for.follow.ups.if.you.stop.responding..,
FirstResolution = What.is.your.most.important.New.Years.Resolution.for.2025..If.you.do.not.have.one..what.is.your.resolution.for.the.Winter.Quarter.,
PriorExperience = Have.you.ever.attempted.this.resolution.before.,
OtherResolutions = If.you.have.multiple.New.Years..Winter.Quarter.Resolutions..please.list.them.out.below..Do.not.include.the.resolution.discussed.in.the.previous.questions..,
ResolutionCategory = Which.category.best.reflects.your.most.important.New.Years.Resolution..Select..Other..if.none.apply.,
TimeSpent = Since.the.start.of.2025..how.long.have.you.kept.up.with.this.resolution.,
InitialMotivation = What.motivated.you.to.adopt.this.New.Years.resolution..Please.be.as.specific.as.possible.in.regards.to.your.goal..motivation..what.inspired.you.to.start.etc..,
SRFactors = In.addition.to.your.response..what.factors.may.have.motivated.you.to.have.this.resolution..Please.select.all.that.apply.,
Plans = Are.there.any.specific.plans.you.have.in.place.to.meet.your.resolution...E.g..working.out.3x.a.week..waking.up.at.6.am.every.day..If.so..please.explain.your.plan..,
Hours = Ideally..about.how.many.hours.a.week.do.you.want.to.dedicate.to.achieving.your.resolution.,
Excitement = At.this.moment..how.excited.are.you.in.regards.to.taking.steps.to.achieve.your.new.years.resolution.,
Dedication = At.this.time..how.dedicated.are.you.towards.continuing.to.achieve.your.new.years.resolution.,
Grade = What.year.are.you.at.UCSD.,
Religion = Religious.Affiliation,
Relationship = Relationship.Status) %>%
select(-c(Timestamp))
#reading in Follow-up CSVs
Followups = read.csv("~/GitHub/COGS164_NY_Resolution/COGS 164 Follow Up (Responses) - Form Responses 1.csv")
#updating dataset
Followups = Followups %>%
mutate(Timestamp = case_when(
grepl("2/16/2025", Timestamp) ~ "Week 1",
grepl("2/17/2025", Timestamp) ~ "Week 1",
grepl("2/18/2025", Timestamp) ~ "Week 1",
grepl("2/19/2025", Timestamp) ~ "Week 1",
grepl("2/20/2025", Timestamp) ~ "Week 1",
grepl("2/22/2025", Timestamp) ~ "Week 1",
grepl("2/24/2025", Timestamp) ~ "Week 2",
grepl("2/25/2025", Timestamp) ~ "Week 2",
grepl("2/26/2025", Timestamp) ~ "Week 2",
grepl("2/27/2025", Timestamp) ~ "Week 2",
grepl("2/28/2025", Timestamp) ~ "Week 2",
grepl("3/1/2025", Timestamp) ~ "Week 2",
TRUE ~ Timestamp)) %>%
rename(email = Email.Address,
Consistency = Since.the.last.survey.you.filled.out..how.consistent.would.you.say.you.have.been.with.working.towards.achieving.your.new.years.resolution..,
Motivated = Since.the.last.survey.you.filled.out..how.motivated.would.you.say.you.have.been.towards.achieving.your.new.years.resolution..,
Excited = How.excited.have.you.been.feeling..in.regards.to.taking.steps.to.achieve.your.new.years.resolution..since.you.last.took.one.of.our.surveys.,
Effort = How.much.effort.did.you.put.into.achieving.this.resolution.since.you.last.took.one.of.our.surveys.,
Satisfaction = How.satisfied.are.you.with.the.effort.you.put.into.achieving.your.resolution.since.you.last.filled.out.this.survey.,
Dedicated = At.this.time..how.dedicated.are.you.towards.continuing.to.achieve.your.new.years.resolution.,
Hours = How.many.hours.have.you.committed.to.your.resolution.this.week.,
ResolutionStatus = Thinking.about.your.New.Year.s.resolutions..so.far.have.you,
MotivationFactors = Since.you.last.filled.out.this.survey..what.factors.have.been.motivating.you.to.stay.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ObstacleFactors = Since.you.last.filled.out.this.survey..what.factors.have.acted.as.obstacles..preventing.you.from.staying.consistent.with.your.new.years.resolution...Check.all.that.apply.,
ResolutionLapses = How.many.times.have.you.not.made.progress.towards.your.resolution.since.you.last.filled.out.this.survey...Quantify.it.the.best.you.can..ex..missed.a.gym.session.twice..went.on.social.media.7.times..etc..,
InconsistentEmotions = If.you.have.been.inconsistent.with.your.New.Years.resolution..how.did.you.feel.during.those.periods.of.inconsistency....Check.all.that.apply.,
ConsistentEmotions = If.you.have.been.consistent.with.your.New.Years.resolution..how.did.you.feel.during.periods.of.consistency...Check.all.that.apply.
)
Followups = Followups %>%
mutate(IntrinsicExtrinsic = case_when(
email %in% c("slourduraj@ucsd.edu", "myam@ucsd.edu", "thshi@ucsd.edu", "skaluarachchi@ucsd.edu", "dhilansunandabong@gmail.com", "mmcclellan@ucsd.edu", "jcurry@ucsd.edu", "yhung@ucsd.edu", "shuaiqizhao6516@gmail.com", "mmitsunaga@ucsd.edu", "juw062@ucsd.edu", "kyanagi@ucsd.edu", "kejamison@ucsd.edu", "sathvik.kas@gmail.com", "jrg005@ucsd.edu", "obandopadhyay@ucsd.edu", "akankshak@utexas.edu", "ak20050411@gmail.com") ~ "Intrinsic",
email %in% c("nmatusiak@ucsd.edu", "gabi.butters@gmail.com", "acmeyer@ucsd.edu", "dwu15234@gmail.com", "svyasabattu@ucsd.edu", "mdn010@ucsd.edu", "jackziemienski2021@gmail.com", "mbgutierrez@ucsd.edu", "atse@ucsd.edu", "trevor.hijar@gmail.com", "gdolan@ucsd.edu", "aebautista@ucsd.edu", "defriday@ucsd.edu", "cghattassmith@gmail.com", "gbutters@ucsd.edu") ~ "Extrinsic",
email %in% c("l9chang@ucsd.edu", "seji@ucsd.edu", "sydneynichol.2@gmail.com", "lissondg@gmail.com") ~ "Both",
TRUE ~ email
))
# Create line graph
Followups %>%
filter(email != "kal086@ucsd.edu") %>%
group_by(Timestamp, IntrinsicExtrinsic) %>%
summarise(Mean_Motivated = mean(Motivated, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = Timestamp, y = Mean_Motivated, group = IntrinsicExtrinsic, color = IntrinsicExtrinsic)) +
geom_line(size = 1) +       # Connect mean values across weeks
geom_point(size = 3) +      # Represent mean values as dots
labs(title = "Consistency Over Time", x = "Week", y = "Mean Consistency") +
theme_bw()
Followups %>%
filter(email != "kal086@ucsd.edu") %>%
ggplot(aes(x = Timestamp, y = Motivated, group = IntrinsicExtrinsic, color = IntrinsicExtrinsic)) +
geom_line(data = . %>% group_by(Timestamp, IntrinsicExtrinsic) %>%
summarise(Mean_Motivated = mean(Motivated, na.rm = TRUE), .groups = "drop"),
aes(x = Timestamp, y = Mean_Motivated), size = 1) +   # Plot the means
geom_point(data = . %>% group_by(Timestamp, IntrinsicExtrinsic) %>%
summarise(Mean_Motivated = mean(Motivated, na.rm = TRUE), .groups = "drop"),
aes(x = Timestamp, y = Mean_Motivated), size = 3) +  # Points for means
geom_jitter(width = 0.2, height = 0, aes(color = IntrinsicExtrinsic)) +  # Jitter for raw data
labs(title = "Consistency Over Time", x = "Week", y = "Consistency") +
theme_bw()
Followups %>%
filter(email != "kal086@ucsd.edu") %>%
separate_rows(InconsistentEmotions, sep = ", ") %>%  # Split into separate rows
group_by(IntrinsicExtrinsic, InconsistentEmotions) %>%  # Keep IntrinsicExtrinsic in the grouping
summarise(Emotion_Count = n(), .groups = "drop") %>%  # Avoids warnings
ggplot(aes(x = InconsistentEmotions, y = Emotion_Count, fill = InconsistentEmotions)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Emotional Reactions to Skipping vs. Consistency") +
facet_grid(rows = vars(IntrinsicExtrinsic)) +  # Now it will work!
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate labels for readability
# Filter data and ensure correct format
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
select(ParticipantID, Timestamp, IntrinsicExtrinsic, Motivated)  # Ensure ParticipantID is present
# Filter data and ensure correct format
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
select(email, Timestamp, IntrinsicExtrinsic, Motivated)  # Ensure ParticipantID is present
# Convert to factors
df_anova$Timestamp <- as.factor(df_anova$Timestamp)
df_anova$IntrinsicExtrinsic <- as.factor(df_anova$IntrinsicExtrinsic)
# Run repeated measures ANOVA
anova_results <- aov_car(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(ParticipantID / Timestamp), data = df_anova)
# Run repeated measures ANOVA
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(ParticipantID / Timestamp), data = df_anova)
library(dplyr)
# Run repeated measures ANOVA
library(afex)
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(ParticipantID / Timestamp), data = df_anova)
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(email / Timestamp), data = df_anova)
summary(anova_results)
df_anova
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(email / Timestamp), data = Followups)
summary(anova_results)
# Filter data and ensure correct format
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
select(email, Timestamp, IntrinsicExtrinsic, Motivated)  # Ensure ParticipantID is present
# Convert to factors
df_anova$Timestamp <- as.factor(df_anova$Timestamp)
df_anova$IntrinsicExtrinsic <- as.factor(df_anova$IntrinsicExtrinsic)
# Run repeated measures ANOVA
library(dplyr)
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(email / Timestamp), data = Followups)
summary(anova_results)
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(email / Timestamp), data = df_anova)
summary(anova_results)
anova_results <- aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(email / Timestamp), data = df_anova)
# Run repeated measures ANOVA
summary(aov(Motivated ~ IntrinsicExtrinsic * Timestamp + Error(email / Timestamp), data = df_anova))
# Prepare data
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
separate_rows(InconsistentEmotions, sep = ", ") %>%  # Separate emotions into rows
group_by(ParticipantID, IntrinsicExtrinsic, InconsistentEmotions) %>%
summarise(Emotion_Count = n(), .groups = "drop") %>%
pivot_wider(names_from = InconsistentEmotions, values_from = Emotion_Count, values_fill = 0)  # Convert emotions into wide format
# Prepare data
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
separate_rows(InconsistentEmotions, sep = ", ") %>%  # Separate emotions into rows
group_by(email, IntrinsicExtrinsic, InconsistentEmotions) %>%
summarise(Emotion_Count = n(), .groups = "drop") %>%
pivot_wider(names_from = InconsistentEmotions, values_from = Emotion_Count, values_fill = 0)  # Convert emotions into wide format
# Convert factors
df_anova$IntrinsicExtrinsic <- as.factor(df_anova$IntrinsicExtrinsic)
df_anova
# Run repeated measures ANOVA
anova_results <- aov_car(cbind(Emotion1, Emotion2, Emotion3, ...) ~ IntrinsicExtrinsic + Error(ParticipantID / InconsistentEmotions), data = df_anova)
# Run repeated measures ANOVA
install.packages("afex")
library(afex)
library(afex)
library(dplyr)
library(tidyr)
anova_results <- aov_car(cbind(Emotion1, Emotion2, Emotion3, ...) ~ IntrinsicExtrinsic + Error(ParticipantID / InconsistentEmotions), data = df_anova)
df_anova
# Prepare data
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
separate_rows(InconsistentEmotions, sep = ", ") %>%  # Separate emotions into rows
group_by(email, IntrinsicExtrinsic, InconsistentEmotions) %>%
summarise(Emotion_Count = n(), .groups = "drop") %>%
pivot_wider(names_from = InconsistentEmotions, values_from = Emotion_Count, values_fill = 0)  # Convert emotions into wide format
# Convert factors
df_anova$IntrinsicExtrinsic <- as.factor(df_anova$IntrinsicExtrinsic)
# Run repeated measures ANOVA
install.packages("afex")
anova_results <- aov_car(cbind(Emotion1, Emotion2, Emotion3, ...) ~ IntrinsicExtrinsic + Error(ParticipantID / InconsistentEmotions), data = df_anova)
anova_results <- aov_car(cbind(Emotion1, Emotion2, Emotion3, ...) ~ IntrinsicExtrinsic + Error(email / InconsistentEmotions), data = df_anova)
df_anova <- Followups %>%
filter(email != "kal086@ucsd.edu") %>%
separate_rows(InconsistentEmotions, sep = ", ") %>%  # Split emotions into rows
group_by(email, IntrinsicExtrinsic, InconsistentEmotions) %>%
summarise(Emotion_Count = n(), .groups = "drop") %>%
pivot_wider(names_from = InconsistentEmotions, values_from = Emotion_Count, values_fill = list(Emotion_Count = 0))  # Convert emotions into wide format
# Convert categorical variables to factors
df_anova$IntrinsicExtrinsic <- as.factor(df_anova$IntrinsicExtrinsic)
# Run repeated measures ANOVA
anova_results <- aov_car(cbind(!!!syms(names(df_anova)[-c(1,2)])) ~ IntrinsicExtrinsic + Error(email / InconsistentEmotions), data = df_anova)
df_anova
